self.onmessage=async u=>{var a,n,l;const{taskId:e,messages:f,userApiKey:d,model:p,API_URL:m}=u.data,g={model:p,messages:f,stream:!0};try{const t=await fetch(m,{method:"POST",headers:{Authorization:`Bearer ${d}`,"Content-Type":"application/json"},body:JSON.stringify(g)});if(t.status===401){self.postMessage({taskId:e,isComplete:!0,result:"认证失败，请检查 API Key 是否正确"});return}else if(!t.ok){self.postMessage({taskId:e,isComplete:!0,result:`请求失败，错误码: ${t.status}`});return}if(!t.body){self.postMessage({taskId:e,isComplete:!0,result:"服务器未返回流数据"});return}const h=t.body.getReader(),y=new TextDecoder;let o="";for(;;){const{done:C,value:M}=await h.read();if(C)break;const k=y.decode(M).split(`
`).filter(s=>s.trim()!=="");for(const s of k)if(s.startsWith("data: ")){const i=s.slice(6).trim();if(i==="[DONE]"){self.postMessage({taskId:e,isComplete:!0,result:o});return}try{const r=JSON.parse(i),c=(l=(n=(a=r==null?void 0:r.choices)==null?void 0:a[0])==null?void 0:n.delta)==null?void 0:l.content;c&&(o+=c,self.postMessage({taskId:e,isComplete:!1,result:o}))}catch{self.postMessage({taskId:e,result:"解析流数据时出错，请稍后重试"})}}}}catch{self.postMessage({taskId:e,result:"请求失败，请稍后重试"})}};
